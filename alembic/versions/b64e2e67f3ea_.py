"""empty message

Revision ID: b64e2e67f3ea
Revises:
Create Date: 2024-05-15 12:36:01.475135

"""
from typing import Sequence, Union

import fastapi_storages
import sqlalchemy as sa
import sqlalchemy_file

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'b64e2e67f3ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('parent_id', sa.Integer(), nullable=True),
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('type',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('firstname', sa.String(
                        length=63), nullable=True),
                    sa.Column('phone_number', sa.String(
                        length=15), nullable=True),
                    sa.Column('tg_user_id', sa.String(
                        length=15), nullable=True),
                    sa.Column('lang', sa.Enum('en', 'ru', 'uz',
                                              name='userlangenum'), nullable=True),
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('subcategory',
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('category_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['category.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('products',
                    sa.Column('subcategory_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('image', fastapi_storages.integrations.sqlalchemy.ImageType(
                        fastapi_storages.FileSystemStorage(path="/tmp")), nullable=True),
                    sa.Column('tg_message_id', sa.String(
                        length=25), nullable=True),
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['subcategory_id'], [
                        'subcategory.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('product_type_association',
                    sa.Column('product_id', sa.Integer(), nullable=True),
                    sa.Column('type_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['type_id'], ['type.id'], )
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_type_association')
    op.drop_table('products')
    op.drop_table('subcategory')
    op.drop_table('users')
    op.drop_table('type')
    op.drop_table('category')
    # ### end Alembic commands ###
